let mapleader = " "
set clipboard=unnamed

imap df <esc>
vmap df <esc>

"# Split line
nnoremap <leader>s, f,wi<Return><esc>
nnoremap <leader>ss f<Space>wi<Return><esc>
nnoremap <leader>sb %cib<Return><C-r>"<C-t><Return><esc>
nnoremap <leader>sB %ciB<Return><C-r>"<Return><esc>

"# Tab
nnoremap > >>
nnoremap < <<
vnoremap > >gv
vnoremap < <gv

"# Search
set ignorecase
set smartcase
set nohlsearch

"# Plugin
set NERDTree
nnoremap <leader>sn :NERDTree<CR>

"# Delete
nnoremap d "_d
nnoremap D "_D
nnoremap x "_x
vnoremap x "_x
nnoremap s "_s

"# Save
nnoremap <leader>q1 :q!<CR>
nnoremap <leader>qq :q<CR>
nnoremap <leader>qa :qa<CR>
nnoremap <leader>wq :wq<CR>
nnoremap <leader>W :w<CR>
nnoremap <leader>wa :wa<CR>
vnoremap <leader>q1 <esc>:q!<CR>
vnoremap <leader>wq <esc>:wq<CR>
vnoremap <leader>ww <esc>:w<CR>

" # Tab
nmap <C-s>1 :action GoToTab1<CR>
nmap <C-s>2 :action GoToTab2<CR>
nmap <C-s>3 :action GoToTab3<CR>
nmap <C-s>4 :action GoToTab4<CR>
nmap <C-s>5 :action GoToTab5<CR>
nmap <C-s>6 :action GoToTab6<CR>
nmap <C-s>7 :action GoToTab7<CR>
nmap <C-s>8 :action GoToTab8<CR>
nmap <C-s>9 :action GoToTab9<CR>
" nmap <C-s>% :action SplitVertically<CR>
" nmap <C-s>" :action SplitHorizontally<CR>
nmap <C-s>% :action MoveTabRight<CR>
nmap <C-s>" :action MoveTabDown<CR>
nmap <C-s>} :action MoveEditorToOppositeTabGroup<CR>
nmap <C-s>{ :action MoveEditorToOppositeTabGroup<CR>
# MoveTabRight, MoveTabDown
# SplitHorizontally
# SplitVertically

" # Git
nmap <leader>gb :action Annotate<CR>
nmap <leader>hu :action Vcs.RollbackChangedLines<CR>

" nmap == :action ReformatCode<CR>

" # formating
" nmap <leader>s, :action IntentionActionAsAction_org.jetbrains.kotlin.idea.intentions.ChopParameterListIntention<CR>
nmap <leader>st :action ToggleInlayHintsGloballyAction<CR>:aciton ToggleInlineHintsAction<CR>

" # beaping
set visualbell
set noerrorbells


" # Conflict
nmap <leader><C-t> :action Refactorings.QuickListPopupAction<CR>
nmap <leader><C-o> :action OverrideMethods<CR>

"# Plugin
set easymotion
map <leader>e <Plug>(easymotion-prefix)
let g:EasyMotion_smartcase = 1

set surround

set highlightedyank

set commentary

set multiple-cursors

set exchange

nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)

nmap <leader>mi :action GotoImplementation<CR>
nmap <leader>md :action GotoDeclaration<CR>
nmap <leader>mr :action FindUsages<CR>
" nmap <leader>mD :action VimGotoDeclaration<CR>

nmap <C-h> <C-w>h
nmap <C-l> <C-w>l
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k


" # Multiple cursor
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
nmap <C-x> <Plug>SkipOccurrence
xmap <C-x> <Plug>SkipOccurrence
nmap <C-p> <Plug>RemoveOccurrence
xmap <C-p> <Plug>RemoveOccurrence

set argtextobj
set textobj-indent

nmap <leader>mm :action MethodUp<CR>
nmap <leader>mM :action MethodDown<CR>
nmap <leader>mt :action GotoTest<CR>
nmap <leader>mp :action ManageRecentProjects<CR>

" #Split


MoveTabDown


nmap <leader>sf :action EditSourceInNewWindow<CR>
